#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESCAPE  &kp N1     &kp N2        &kp N3        &kp N4            &kp N5       &mmv MOVE_UP     &kp N6     &kp N7     &kp N8     &kp N9     &kp N0    &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R             &kp T        &mmv MOVE_DOWN   &kp Y      &kp U      &kp I      &kp O      &kp P     &kp BSLH
&mo 1       &kp A      &kp S         &kp D         &kp F             &kp G        &mmv MOVE_LEFT   &kp H      &kp J      &kp K      &kp L      &kp SEMI  &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V             &kp B        &mmv MOVE_RIGHT  &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH  &kp PRINTSCREEN
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp SPACE    &mkp LCLK        &kp ENTER  &kp ENTER  &kp MINUS  &kp EQUAL  &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_3 {
            display-name = "LAYER0";
            bindings = <
&kp GRAVE   &kp F1          &kp F2          &kp F3           &kp F4     &kp F5       &mmv MOVE_UP     &kp F6     &kp F7     &kp F8     &kp F9   &kp F10           &kp DELETE
&kp TAB     &kp HOME        &kp UP_ARROW    &kp END          &kp PG_UP  &kp T        &mmv MOVE_DOWN   &kp Y      &kp U      &kp I      &kp O    &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&none       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_DN  &kp G        &mmv MOVE_LEFT   &kp H      &kp J      &kp K      &kp L    &kp SEMI          &kp APOS
&kp LSHFT   &kp Z           &kp X           &kp C            &kp V      &kp B        &mmv MOVE_RIGHT  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH          &kp ENTER
&kp C_MUTE  &kp LCTRL       &kp LEFT_GUI    &kp LEFT_ALT     &kp SPACE  &kp SPACE    &mkp LCLK        &kp ENTER  &kp ENTER  &kp F11    &kp F12  &mo 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_2 {
            display-name = "LAYER0";
            bindings = <
&kp ESC     &kp N1     &bl BL_DEC    &bl BL_INC    &bl BL_OFF  &bl BL_ON       &mmv MOVE_UP     &kp N6     &kp N7     &rgb_ug RGB_BRD  &rgb_ug RGB_BRI                   &rgb_ug RGB_OFF  &rgb_ug RGB_ON
&kp TAB     &kp Q      &kp W         &kp E         &kp R       &bl BL_CYCLE    &mmv MOVE_DOWN   &kp Y      &kp U      &rgb_ug RGB_EFR  &rgb_ug RGB_EFF                   &rgb_ug RGB_HUD  &rgb_ug RGB_HUI
&mo 1       &kp A      &kp S         &kp D         &kp F       &kp G           &mmv MOVE_LEFT   &kp H      &kp J      &kp K            &rgb_ug RGB_COLOR_HSB(0,100,100)  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V       &kp B           &mmv MOVE_RIGHT  &kp N      &kp M      &kp COMMA        &kp DOT                           &kp FSLH         &kp C_PLAY_PAUSE
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE   &kp SPACE       &mkp LCLK        &kp ENTER  &kp ENTER  &kp MINUS        &kp EQUAL                         &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };
};
